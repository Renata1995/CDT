<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- WARNING: Eclipse auto-generated file.
              Any modifications will be overwritten.
              To include a user specific buildfile here, simply create one in the same
              directory with the processing instruction <?eclipse.ant.import?>
              as the first entry and export the buildfile again. --><project basedir="." default="build" name="02CDT_WordPuzzle">
    <property environment="env"/>
    <property name="junit.output.dir" value="junit"/>
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="target" value="1.8"/>
    <property name="source" value="1.8"/>
    <path id="02CDT_WordPuzzle.classpath"/>
    <path id="run.Controller (5).classpath">
        <path refid="02CDT_WordPuzzle.classpath"/>
    </path>
    <path id="run.Controller (5).bootclasspath"/>
    <path id="run.DictionaryTest.classpath">
        <path refid="02CDT_WordPuzzle.classpath"/>
    </path>
    <path id="run.DictionaryTest.bootclasspath"/>
    <path id="run.GridTest.classpath">
        <path refid="02CDT_WordPuzzle.classpath"/>
    </path>
    <path id="run.GridTest.bootclasspath"/>
    <path id="run.ModelTest.classpath">
        <path refid="02CDT_WordPuzzle.classpath"/>
    </path>
    <path id="run.ModelTest.bootclasspath"/>
    <path id="run.testing (1).classpath">
        <path refid="02CDT_WordPuzzle.classpath"/>
    </path>
    <path id="run.testing (1).bootclasspath"/>
    <path id="run.UserController.classpath">
        <path refid="02CDT_WordPuzzle.classpath"/>
    </path>
    <path id="run.UserController.bootclasspath"/>
    <path id="run.View (1).classpath">
        <path refid="02CDT_WordPuzzle.classpath"/>
    </path>
    <path id="run.View (1).bootclasspath"/>
    <target name="init"/>
    <target name="clean"/>
    <target depends="clean" name="cleanall"/>
    <target depends="build-subprojects,build-project" name="build"/>
    <target name="build-subprojects"/>
    <target depends="init" name="build-project">
        <echo message="${ant.project.name}: ${ant.file}"/>
    </target>
    <target description="Build all projects which reference this project. Useful to propagate changes." name="build-refprojects"/>
    <target description="copy Eclipse compiler jars to ant lib directory" name="init-eclipse-compiler">
        <copy todir="${ant.library.dir}">
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </copy>
        <unzip dest="${ant.library.dir}">
            <patternset includes="jdtCompilerAdapter.jar"/>
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </unzip>
    </target>
    <target description="compile project with Eclipse compiler" name="build-eclipse-compiler">
        <property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter"/>
        <antcall target="build"/>
    </target>
    <target name="Controller (5)">
        <java classname="puzzle.ui.Controller" failonerror="true" fork="yes">
            <classpath refid="run.Controller (5).classpath"/>
            <bootclasspath>
                <path refid="run.Controller (5).bootclasspath"/>
            </bootclasspath>
        </java>
    </target>
    <target name="DictionaryTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="puzzle.test.DictionaryTest" todir="${junit.output.dir}"/>
            <classpath refid="run.DictionaryTest.classpath"/>
            <bootclasspath>
                <path refid="run.DictionaryTest.bootclasspath"/>
            </bootclasspath>
        </junit>
    </target>
    <target name="GridTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="puzzle.test.GridTest" todir="${junit.output.dir}"/>
            <classpath refid="run.GridTest.classpath"/>
            <bootclasspath>
                <path refid="run.GridTest.bootclasspath"/>
            </bootclasspath>
        </junit>
    </target>
    <target name="ModelTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="puzzle.test.ModelTest" todir="${junit.output.dir}"/>
            <classpath refid="run.ModelTest.classpath"/>
            <bootclasspath>
                <path refid="run.ModelTest.bootclasspath"/>
            </bootclasspath>
        </junit>
    </target>
    <target name="testing (1)">
        <java classname="puzzle.domain.testing" failonerror="true" fork="yes">
            <classpath refid="run.testing (1).classpath"/>
            <bootclasspath>
                <path refid="run.testing (1).bootclasspath"/>
            </bootclasspath>
        </java>
    </target>
    <target name="UserController">
        <java classname="puzzle.ui.UserController" failonerror="true" fork="yes">
            <classpath refid="run.UserController.classpath"/>
            <bootclasspath>
                <path refid="run.UserController.bootclasspath"/>
            </bootclasspath>
        </java>
    </target>
    <target name="View (1)">
        <java classname="puzzle.ui.View" failonerror="true" fork="yes">
            <classpath refid="run.View (1).classpath"/>
            <bootclasspath>
                <path refid="run.View (1).bootclasspath"/>
            </bootclasspath>
        </java>
    </target>
    <target name="junitreport">
        <junitreport todir="${junit.output.dir}">
            <fileset dir="${junit.output.dir}">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="frames" todir="${junit.output.dir}"/>
        </junitreport>
    </target>
</project>
